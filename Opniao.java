import java.awt.Font;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Davi
 */
public class Opniao extends javax.swing.JFrame {

    private int medioCount = 0;
    private int bomCount = 0;
    private int ruimCount = 0;
    /**
     * Creates new form Sistema
     */
    public Opniao() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        new javax.swing.JFrame();
        new javax.swing.JFrame();
        new javax.swing.JPanel();
        new javax.swing.JProgressBar();
        new javax.swing.JToolBar();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                formCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        jLabel8.setFont(new java.awt.Font("Arial Black", 3, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("O ATENDIMENTO FOI:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(136, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 40));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel6.setText("0");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 240, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel5.setText("0");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, -1, 44));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel4.setText("0");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, -1, 46));

        jLabel7.setFont(new java.awt.Font("Segoe UI Emoji", 1, 48)); // NOI18N
        jLabel7.setText("üòä");
        jLabel7.setFocusable(false);
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 77, 70));

        jButton2.setBackground(new java.awt.Color(102, 255, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jButton2.setText("BOM");
        jButton2.setBorder(null);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 180, 180));

        jLabel9.setFont(new java.awt.Font("Segoe UI Emoji", 1, 48)); // NOI18N
        jLabel9.setText("üò†");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, 70, 70));

        jButton3.setBackground(new java.awt.Color(255, 0, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jButton3.setText("RUIM");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton3MousePressed(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 60, 180, 180));

        jLabel10.setFont(new java.awt.Font("Segoe UI Emoji", 1, 48)); // NOI18N
        jLabel10.setText("üòê");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, -1, 70));

        jButton1.setBackground(new java.awt.Color(153, 0, 153));
        jButton1.setFont(new java.awt.Font("Segoe UI", 3, 

36)); // NOI18N
        jButton1.setText("M√âDIO");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 180, 180));

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {                                      
        medioCount++;
        jLabel4.setText(String.valueOf(medioCount));
        try {
            // Carregar a imagem
            BufferedImage originalImage = ImageIO.read(new File("qrcode.png"));

            // Definir o tamanho m√°ximo da imagem (largura x altura)
            int maxWidth = 200;
            int maxHeight = 200;

            // Redimensionar a imagem mantendo a propor√ß√£o
            int newWidth = originalImage.getWidth();
            int newHeight = originalImage.getHeight();
            if (newWidth > maxWidth || newHeight > maxHeight) {
                double aspectRatio = (double) newWidth / newHeight;
                if (newWidth > maxWidth) {
                    newWidth = maxWidth;
                    newHeight = (int) (newWidth / aspectRatio);
                }
                if (newHeight > maxHeight) {
                    newHeight = maxHeight;
                    newWidth = (int) (newHeight * aspectRatio);
                }
            }
            Image scaledImage = originalImage.getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);

            // Criar um ImageIcon com a imagem redimensionada
            ImageIcon icon = new ImageIcon(scaledImage);
            Font font = new Font("Arial",Font.BOLD, 18); // Altere o tamanho da fonte conforme necess√°rio

            // Configurar a fonte para o JOptionPane
            UIManager.put("OptionPane.messageFont", font);
            UIManager.put("OptionPane.buttonFont", font);

            // Exibir uma mensagem com imagem usando JOptionPane
            JOptionPane.showMessageDialog(this, "Nos forne√ßa um feedback construtivo em nosso site", "MEDIO", JOptionPane.INFORMATION_MESSAGE, icon);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }                                     

    private void jButton3MousePressed(java.awt.event.MouseEvent evt) {                                      
        ruimCount++;
        jLabel6.setText(String.valueOf(ruimCount));

        try {
            // Carregar a imagem
            BufferedImage originalImage = ImageIO.read(new File("qrcode.png"));

            // Definir o tamanho m√°ximo da imagem (largura x altura)
            int maxWidth = 200;
            int maxHeight = 200;

            // Redimensionar a imagem mantendo a propor√ß√£o
            int newWidth = originalImage.getWidth();
            int newHeight = originalImage.getHeight();
            if (newWidth > maxWidth || newHeight > maxHeight) {
                double aspectRatio = (double) newWidth / newHeight;
                if (newWidth > maxWidth) {
                    newWidth = maxWidth;
                    newHeight = (int) (newWidth / aspectRatio);
                }
                if (newHeight > maxHeight) {
                    newHeight = maxHeight;
                    newWidth = (int) (newHeight * aspectRatio);
                }
            }
            Image scaledImage = originalImage.getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);

            // Criar um ImageIcon com a imagem redimensionada
            ImageIcon icon = new ImageIcon(scaledImage);
            Font font = new Font("Arial",Font.BOLD, 18); // Altere o tamanho da fonte conforme necess√°rio

            // Configurar a fonte para o JOptionPane
            UIManager.put("OptionPane.messageFont", font);
            UIManager.put("OptionPane.buttonFont", font);

            // Exibir uma mensagem com imagem usando JOptionPane
            JOptionPane.showMessageDialog(this, "Nos forne√ßa um feedback construtivo em nosso site", "RUIM", JOptionPane.INFORMATION_MESSAGE, icon);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }                                     

    private void formCaretPositionChanged(java.awt.event.InputMethodEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {                                      
        bomCount++;
        jLabel5.setText(String.valueOf(bomCount));

        try {
            // Carregar a imagem
            BufferedImage originalImage = ImageIO.read(new File("qrcode.png"));

            // Definir o tamanho m√°ximo da imagem (largura x altura)
            int maxWidth = 200;
            int maxHeight = 200;

            // Redimensionar a imagem mantendo a propor√ß√£o
            int newWidth = originalImage.getWidth();
            int newHeight = originalImage.getHeight();
            if (newWidth > maxWidth || newHeight > maxHeight) {
                double aspectRatio = (double) newWidth / newHeight;
                if (newWidth > maxWidth) {
                    newWidth = maxWidth;
                    newHeight = (int) (newWidth / aspectRatio);
                }
                if (newHeight > maxHeight) {
                    newHeight = maxHeight;
                    newWidth = (int) (newHeight * aspectRatio);
                }
            }
            Image scaledImage = originalImage.getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);

            // Criar um ImageIcon com a imagem redimensionada
            ImageIcon icon = new ImageIcon(scaledImage);
            Font font = new Font("Arial",Font.BOLD, 18); // Altere o tamanho da fonte conforme necess√°rio

            // Configurar a fonte para o JOptionPane
            UIManager.put("OptionPane.messageFont", font);
            UIManager.put("OptionPane.buttonFont", font);

            // Exibir uma mensagem com imagem usando JOptionPane
            JOptionPane.showMessageDialog(this, "Nos forne√ßa um feedback construtivo em nosso site", "BOM", JOptionPane.INFORMATION_MESSAGE, icon);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }                                     

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info

 : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sistema().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel5;
    // End of variables declaration                   
}
